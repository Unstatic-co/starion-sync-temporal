version: "3.5"
services:
  temporal-history:
    container_name: temporal-history
    depends_on:
      - postgresql
      - temporal-admin-tools
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=history
#      - BIND_ON_IP=0.0.0.0
      - PROMETHEUS_ENDPOINT=0.0.0.0:8000
#      - TEMPORAL_BROADCAST_ADDRESS=temporal-history
    image: temporalio/server:1.17.2
    ports:
      - 7234:7234
      - 8000:8000
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    tty: true
    stdin_open: true

  temporal-matching:
    container_name: temporal-matching
    depends_on:
      - temporal-history
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=matching
#      - BIND_ON_IP=0.0.0.0
      - PROMETHEUS_ENDPOINT=0.0.0.0:8001
#      - TEMPORAL_BROADCAST_ADDRESS=temporal-matching
    image: temporalio/server:1.17.2
    ports:
      - 7235:7235
      - 8001:8001
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    tty: true
    stdin_open: true

  temporal-frontend:
    container_name: temporal-frontend
    depends_on:
      - temporal-matching
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=frontend
#      - BIND_ON_IP=0.0.0.0
      - PROMETHEUS_ENDPOINT=0.0.0.0:8002
#      - TEMPORAL_BROADCAST_ADDRESS=temporal-frontend
    image: temporalio/server:1.17.2
    ports:
      - 7233:7233
      - 8002:8002
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    tty: true
    stdin_open: true

  temporal-worker:
    container_name: temporal-worker
    depends_on:
      - temporal-frontend
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
      - SERVICES=worker
#      - BIND_ON_IP=0.0.0.0
      - PROMETHEUS_ENDPOINT=0.0.0.0:8003
#      - TEMPORAL_BROADCAST_ADDRESS=temporal-worker
      - PUBLIC_FRONTEND_ADDRESS=temporal-frontend:7233
    image: temporalio/server:1.17.2
    ports:
      - 7232:7232
      - 8003:8003
    restart: on-failure
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    tty: true
    stdin_open: true

  temporal-admin-tools:
    container_name: temporal-admin-tools
    depends_on:
      - postgresql
    environment:
      - TEMPORAL_CLI_ADDRESS=temporal-frontend:7233
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=temporal
      - POSTGRES_PWD=temporal
      - POSTGRES_SEEDS=postgresql
      - TEMPORAL_HOME=/etc/temporal
      - ENABLE_ES=false
    image: temporalio/admin-tools:1.17.2
    volumes:
      - "./script/setup.sh:/etc/temporal/setup.sh"
    entrypoint:
      - /etc/temporal/setup.sh
    restart: always
    stdin_open: true
    tty: true

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal-admin-tools
    environment:
      - TEMPORAL_ADDRESS=temporal-frontend:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
      - TEMPORAL_UI_PORT=8081
    image: temporalio/ui:2.5.0
    ports:
      - 8081:8081
  temporal-web:
    container_name: temporal-web
    depends_on:
      - temporal-admin-tools
    environment:
      - TEMPORAL_GRPC_ENDPOINT=temporal-frontend:7233
      - TEMPORAL_PERMIT_WRITE_API=true
      - TEMPORAL_GRPC_MAX_MESSAGE_LENGTH=67108864
    image: temporalio/web:1.15.0
    ports:
      - 8088:8088
  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.37.0
    ports:
      - 9090:9090
    volumes:
      - type: bind
        source: ./deployment/prometheus/config.yml
        target: /etc/prometheus/prometheus.yml
    depends_on:
      - temporal-worker
  grafana:
    container_name: grafana
    image: grafana/grafana:9.0.7
    build: './deployment/grafana'
    environment:
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - 8085:3000
    volumes:
      - type: bind
        source: ./deployment/grafana/provisioning/datasources
        target: /etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
    - 9000:9000
networks:
  default:
    external: true
    name: temporal-network
